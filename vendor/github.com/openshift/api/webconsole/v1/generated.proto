
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.openshift.api.webconsole.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "k8s.io/apimachinery/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// AssetExtensionsConfig holds the necessary configuration options for asset extensions
message AssetExtensionsConfig {
  // SubContext is the path under /<context>/extensions/ to serve files from SourceDirectory
  optional string name = 1;

  // SourceDirectory is a directory on the asset server to serve files under Name in the Web
  // Console. It may have nested folders.
  optional string sourceDirectory = 2;

  // HTML5Mode determines whether to redirect to the root index.html when a file is not found.
  // This is needed for apps that use the HTML5 history API like AngularJS apps with HTML5
  // mode enabled. If HTML5Mode is true, also rewrite the base element in index.html with the
  // Web Console's context root. Defaults to false.
  optional bool html5Mode = 3;
}

// CertInfo relates a certificate with a private key
message CertInfo {
  // CertFile is a file containing a PEM-encoded certificate
  optional string certFile = 1;

  // KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile
  optional string keyFile = 2;
}

// HTTPServingInfo holds configuration for serving HTTP
message HTTPServingInfo {
  // ServingInfo is the HTTP serving information
  optional ServingInfo servingInfo = 1;

  // MaxRequestsInFlight is the number of concurrent requests allowed to the server. If zero, no limit.
  optional int64 maxRequestsInFlight = 2;

  // RequestTimeoutSeconds is the number of seconds before requests are timed out. The default is 60 minutes, if
  // -1 there is no limit on requests.
  optional int64 requestTimeoutSeconds = 3;
}

// NamedCertificate specifies a certificate/key, and the names it should be served for
message NamedCertificate {
  // Names is a list of DNS names this certificate should be used to secure
  // A name can be a normal DNS name, or can contain leading wildcard segments.
  repeated string names = 1;

  // CertInfo is the TLS cert info for serving secure traffic
  optional CertInfo certInfo = 2;
}

// ServingInfo holds information about serving web pages
message ServingInfo {
  // BindAddress is the ip:port to serve on
  optional string bindAddress = 1;

  // BindNetwork is the type of network to bind to - defaults to "tcp4", accepts "tcp",
  // "tcp4", and "tcp6"
  optional string bindNetwork = 2;

  // CertInfo is the TLS cert info for serving secure traffic.
  // this is anonymous so that we can inline it for serialization
  optional CertInfo certInfo = 3;

  // ClientCA is the certificate bundle for all the signers that you'll recognize for incoming client certificates
  optional string clientCA = 4;

  // NamedCertificates is a list of certificates to use to secure requests to specific hostnames
  repeated NamedCertificate namedCertificates = 5;

  // MinTLSVersion is the minimum TLS version supported.
  // Values must match version names from https://golang.org/pkg/crypto/tls/#pkg-constants
  optional string minTLSVersion = 6;

  // CipherSuites contains an overridden list of ciphers for the server to support.
  // Values must match cipher suite IDs from https://golang.org/pkg/crypto/tls/#pkg-constants
  repeated string cipherSuites = 7;
}

// WebConsoleConfiguration holds the necessary configuration options for serving the web console
message WebConsoleConfiguration {
  // ServingInfo is the HTTP serving information for these assets
  optional HTTPServingInfo servingInfo = 1;

  // PublicURL is where you can find the asset server (TODO do we really need this?)
  optional string publicURL = 2;

  // LogoutURL is an optional, absolute URL to redirect web browsers to after logging out of the web console.
  // If not specified, the built-in logout page is shown.
  optional string logoutURL = 3;

  // MasterPublicURL is how the web console can access the OpenShift v1 server
  optional string masterPublicURL = 4;

  // LoggingPublicURL is the public endpoint for logging (optional)
  optional string loggingPublicURL = 5;

  // MetricsPublicURL is the public endpoint for metrics (optional)
  optional string metricsPublicURL = 6;

  // ExtensionScripts are file paths on the asset server files to load as scripts when the Web
  // Console loads
  repeated string extensionScripts = 7;

  // ExtensionProperties are key(string) and value(string) pairs that will be injected into the console under
  // the global variable OPENSHIFT_EXTENSION_PROPERTIES
  map<string, string> extensionProperties = 8;

  // ExtensionStylesheets are file paths on the asset server files to load as stylesheets when
  // the Web Console loads
  repeated string extensionStylesheets = 9;

  // Extensions are files to serve from the asset server filesystem under a subcontext
  repeated AssetExtensionsConfig extensions = 10;

  // ExtensionDevelopment when true tells the asset server to reload extension scripts and
  // stylesheets for every request rather than only at startup. It lets you develop extensions
  // without having to restart the server for every change.
  optional bool extensionDevelopment = 11;
}

